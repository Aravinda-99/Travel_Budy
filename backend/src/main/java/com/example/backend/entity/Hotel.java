package com.example.backend.entity;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

@Entity
@Table(name = "hotels")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class Hotel {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;

    @Column(nullable = false)
    private String name;

    @Column(nullable = false)
    private String city;

    @Column(nullable = false)
    private String country;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private PriceRange priceRange;

    @ElementCollection
    @CollectionTable(name = "hotel_amenities", joinColumns = @JoinColumn(name = "hotel_id"))
    @Column(name = "amenity")
    @Builder.Default
    private Set<String> amenities = new HashSet<>();

    @Column(name = "user_rating")
    private Double userRating;

    @Column(name = "booking_link")
    private String affiliateBookingLink;

    @Column(name = "image", nullable = false)
    private String image;



    // Convenience methods for amenities that won't be generated by Lombok
    public void addAmenity(String amenity) {
        this.amenities.add(amenity);
    }

    public void removeAmenity(String amenity) {
        this.amenities.remove(amenity);
    }
}